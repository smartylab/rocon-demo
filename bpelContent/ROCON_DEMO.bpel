<!-- ROCON_DEMO BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Mon Jul 13 13:56:42 KST 2015 -->
<bpel:process name="ROCON_DEMO"
         targetNamespace="kr.co.smartylab"
         suppressJoinFailure="yes"
         xmlns:tns="kr.co.smartylab"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://smartylab.co.kr/products/op/adapter">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://smartylab.co.kr/products/op/adapter" location="adapter.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="ROCON_DEMOArtifacts.wsdl" namespace="kr.co.smartylab" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:ROCON_DEMO"
                     myRole="ROCON_DEMOProvider"
                     />
        
        <bpel:partnerLink name="Adapter" partnerLinkType="tns:AdapterPLT" partnerRole="AdapterPLTRole"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:ROCON_DEMORequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:ROCON_DEMOResponseMessage"/>
        <bpel:variable name="adapterResponse" messageType="ns:invoke_adapterOutput"></bpel:variable>
        <bpel:variable name="adapterRequest" messageType="ns:invoke_adapterInput"></bpel:variable>
        <bpel:variable name="clientRequest" messageType="tns:invokeFirstRappRequest"></bpel:variable>
        <bpel:variable name="adapterResponse1" messageType="ns:send_topic_msgOutput"></bpel:variable>
        <bpel:variable name="adapterRequest1" messageType="ns:send_topic_msgInput"></bpel:variable>
        <bpel:variable name="clientResponse" messageType="tns:invokeFirstRappResponse"></bpel:variable>
        <bpel:variable name="clientRequest1" messageType="tns:invokeSecondRappRequest"></bpel:variable>
        <bpel:variable name="clientResponse1" messageType="tns:invokeSecondRappResponse"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in ROCON_DEMO.wsdl 
             -->
        
        
        <!-- Generate reply to synchronous request -->
        
        <bpel:pick name="PickBPELInvocations" createInstance="yes">
            <bpel:onMessage partnerLink="client" operation="requestResourceAllocation" portType="tns:ROCON_DEMO" variable="input">
                <bpel:sequence>
                    <bpel:assign validate="no" name="AssignLinkGraph">
                        
                        
                        <bpel:copy>
                            <bpel:from><bpel:literal xml:space="preserve"><tns:invoke_adapter xmlns:tns="http://smartylab.co.kr/products/op/adapter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:LinkGraph>
    <tns:publishers>
      <tns:Publisher>
        <tns:topic_id>start_wandering_turtlebot</tns:topic_id>
      </tns:Publisher>
      <tns:Publisher>
        <tns:topic_id>start_spinning_turtlebot</tns:topic_id>
      </tns:Publisher>
      <tns:Publisher>
        <tns:topic_id>start_spinning_spheroball</tns:topic_id>
      </tns:Publisher>
    </tns:publishers>
    <tns:edges>
      <tns:Edge>
        <tns:start>start_wandering_turtlebot</tns:start>
        <tns:finish>turtlebot_controller</tns:finish>
        <tns:remap_from>start_wandering_turtlebot</tns:remap_from>
        <tns:remap_to>/concert_adapter/start_wandering_turtlebot</tns:remap_to>
      </tns:Edge>
      <tns:Edge>
        <tns:start>turtlebot_controller</tns:start>
        <tns:finish>stop_wandering_turtlebot</tns:finish>
        <tns:remap_from>stop_wandering_turtlebot</tns:remap_from>
        <tns:remap_to>/concert_adapter/stop_wandering_turtlebot</tns:remap_to>
      </tns:Edge>
      <tns:Edge>
        <tns:start>start_spinning_turtlebot</tns:start>
        <tns:finish>turtlebot_controller</tns:finish>
        <tns:remap_from>start_spinning_turtlebot</tns:remap_from>
        <tns:remap_to>/concert_adapter/start_spinning_turtlebot</tns:remap_to>
      </tns:Edge>
      <tns:Edge>
        <tns:start>start_spinning_spheroball</tns:start>
        <tns:finish>spheroball_controller</tns:finish>
        <tns:remap_from>start_spinning_spheroball</tns:remap_from>
        <tns:remap_to>/concert_adapter/start_spinning_spheroball</tns:remap_to>
      </tns:Edge>
    </tns:edges>
    <tns:name>tns:name</tns:name>
    <tns:subscribers>
      <tns:Subscriber>
        <tns:callback_method_id>invoke_second_rapp</tns:callback_method_id>
        <tns:topic_id>stop_wandering_turtlebot</tns:topic_id>
      </tns:Subscriber>
    </tns:subscribers>
    <tns:services>
    </tns:services>
    <tns:nodes>
      <tns:Node>
        <tns:max>0</tns:max>
        <tns:min>0</tns:min>
        <tns:id>turtlebot_controller</tns:id>
        <tns:parameters>
          <tns:parameter>
            <tns:message>tns:message</tns:message>
            <tns:frequency>0</tns:frequency>
          </tns:parameter>
        </tns:parameters>
        <tns:uri>rocon:/*/*#turtlebot_rapps/turtlebot_controller</tns:uri>
      </tns:Node>
      <tns:Node>
        <tns:max>0</tns:max>
        <tns:min>0</tns:min>
        <tns:id>spheroball_controller</tns:id>
        <tns:parameters>
          <tns:parameter>
            <tns:message>tns:message</tns:message>
            <tns:frequency>0</tns:frequency>
          </tns:parameter>
        </tns:parameters>
        <tns:uri>rocon:/*/*#spheroball_rapps/spheroball_controller</tns:uri>
      </tns:Node>
    </tns:nodes>
    <tns:topics>
      <tns:Topic>
        <tns:type>std_msgs/String</tns:type>
        <tns:id>start_wandering_turtlebot</tns:id>
      </tns:Topic>
      <tns:Topic>
        <tns:type>std_msgs/String</tns:type>
        <tns:id>start_spinning_turtlebot</tns:id>
      </tns:Topic>
      <tns:Topic>
        <tns:type>std_msgs/String</tns:type>
        <tns:id>stop_wandering_turtlebot</tns:id>
      </tns:Topic>
      <tns:Topic>
        <tns:type>std_msgs/String</tns:type>
        <tns:id>start_spinning_spheroball</tns:id>
      </tns:Topic>
    </tns:topics>
    <tns:actions>
    </tns:actions>
    <tns:methods>
      <tns:Method>
        <tns:name>invokeSecondRapp</tns:name>
        <tns:namespace>kr.co.smartylab</tns:namespace>
        <tns:param>in</tns:param>
        <tns:address>http://localhost:8080/ode/processes/ROCON_DEMO</tns:address>
        <tns:return_name>clientResponse1</tns:return_name>
        <tns:id>invoke_second_rapp</tns:id>
      </tns:Method>
    </tns:methods>
  </tns:LinkGraph>
</tns:invoke_adapter></bpel:literal></bpel:from>
                            <bpel:to variable="adapterRequest" part="parameters"></bpel:to>
                        </bpel:copy>
                        
                    </bpel:assign>
                    <bpel:invoke name="sendResourceAllocationMsg" partnerLink="Adapter" operation="invoke_adapter" portType="ns:concert_adapter_soap_serverPortType" inputVariable="adapterRequest" outputVariable="adapterResponse"></bpel:invoke>
                    <bpel:assign validate="no" name="AssignResourceAllocationResult">
                        
                        <bpel:copy>
                            <bpel:from part="parameters" variable="adapterResponse">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:out]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="payload" variable="output">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:reply name="ReplyAllocationResult" partnerLink="client" operation="requestResourceAllocation" portType="tns:ROCON_DEMO" variable="output"></bpel:reply>
                </bpel:sequence>
            </bpel:onMessage>
            <bpel:onMessage partnerLink="client" operation="invokeFirstRapp" portType="tns:ROCON_DEMO" variable="clientRequest">
                <bpel:sequence>
                    <bpel:assign validate="no" name="AssignInputforFirstApp">
                        
                        
                        
                        
                        
                        
                        <bpel:copy>
                            <bpel:from><bpel:literal xml:space="preserve"><tns:send_topic_msg xmlns:tns="http://smartylab.co.kr/products/op/adapter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:namespace>start_wandering_turtlebot</tns:namespace>
  <tns:message_val>{&quot;data&quot;:&quot;Start Wandering Turtlebot&quot;}</tns:message_val>
</tns:send_topic_msg></bpel:literal></bpel:from>
                            <bpel:to variable="adapterRequest1" part="parameters"></bpel:to>
                        </bpel:copy>
                        
                    </bpel:assign>
                    <bpel:invoke name="InvokeFirstApp" partnerLink="Adapter" operation="send_topic_msg" portType="ns:concert_adapter_soap_serverPortType" inputVariable="adapterRequest1" outputVariable="adapterResponse1"></bpel:invoke>
                    <bpel:assign validate="no" name="AssignFirstResult">
                        
                        
                        <bpel:copy>
                            <bpel:from part="parameters" variable="adapterResponse1">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:out]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="parameters" variable="clientResponse">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:out]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:reply name="ReplyFirstResult" partnerLink="client" operation="invokeFirstRapp" portType="tns:ROCON_DEMO" variable="clientResponse"></bpel:reply>
                </bpel:sequence>
            </bpel:onMessage>
            <bpel:onMessage partnerLink="client" operation="invokeSecondRapp" portType="tns:ROCON_DEMO" variable="clientRequest1">
                <bpel:sequence>
                    
                    <bpel:assign validate="no" name="AssignSecondResult">
                    
                        <bpel:copy>
                            <bpel:from><bpel:literal xml:space="preserve"><tns:invokeSecondRappResponse xmlns:tns="kr.co.smartylab" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:out>TEST</tns:out>
</tns:invokeSecondRappResponse>
</bpel:literal></bpel:from>
                            <bpel:to variable="clientResponse1" part="parameters"></bpel:to>
                        </bpel:copy>
                        
                    </bpel:assign>
                    <bpel:reply name="ReplySecondResult" partnerLink="client" operation="invokeSecondRapp" portType="tns:ROCON_DEMO" variable="clientResponse1"></bpel:reply>
                    <bpel:assign validate="no" name="AssignInputforSecondApp"><bpel:copy>
                            <bpel:from><bpel:literal xml:space="preserve"><tns:send_topic_msg xmlns:tns="http://smartylab.co.kr/products/op/adapter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:namespace>start_spinning_spheroball</tns:namespace>
  <tns:message_val>{&quot;data&quot;:&quot;Start Spinning Spheroball&quot;}</tns:message_val>
</tns:send_topic_msg></bpel:literal></bpel:from>
                            <bpel:to variable="adapterRequest1" part="parameters"></bpel:to>
                        </bpel:copy>
                        
                    
                    </bpel:assign>
                    <bpel:invoke name="InvokeSecondApp" partnerLink="Adapter" operation="send_topic_msg" portType="ns:concert_adapter_soap_serverPortType" inputVariable="adapterRequest1" outputVariable="adapterResponse1"></bpel:invoke>
                    
                    
                </bpel:sequence>
            </bpel:onMessage>
        </bpel:pick>
    </bpel:sequence>
</bpel:process>

